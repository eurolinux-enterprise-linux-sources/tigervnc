# Makefile.in generated by automake 1.9.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

SOURCES = $(librfb_win32_la_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@

# These files rely on features not yet in upstream mingw
@BUILD_WINVNC_TRUE@am__append_1 = \
@BUILD_WINVNC_TRUE@  CleanDesktop.h \
@BUILD_WINVNC_TRUE@  CleanDesktop.cxx

subdir = win/rfb_win32
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
librfb_win32_la_DEPENDENCIES =
am__librfb_win32_la_SOURCES_DIST = AboutDialog.h BitmapInfo.h \
	CKeyboard.h Clipboard.h CompatibleBitmap.h ComputerName.h \
	CPointer.h CurrentUser.h DeviceContext.h DeviceFrameBuffer.h \
	Dialog.h DIBSectionBuffer.h DynamicFn.h EventManager.h \
	Handle.h IconInfo.h IntervalTimer.h keymap.h LaunchProcess.h \
	ListViewControl.h LocalMem.h LogicalPalette.h \
	LowLevelKeyEvents.h ModuleFileName.h MonitorInfo.h MsgBox.h \
	MsgWindow.h OSVersion.h ProgressControl.h RegConfig.h \
	Registry.h resource.h ScaledDIBSectionBuffer.h SecurityPage.h \
	SDisplayCoreDriver.h SDisplayCorePolling.h \
	SDisplayCoreWMHooks.h SDisplay.h Security.h Service.h SInput.h \
	SocketManager.h TCharArray.h Threading.h ToolBar.h TrayIcon.h \
	TsSessions.h Win32Util.h WMCursor.h WMHooks.h WMNotifier.h \
	WMPoller.h WMShatter.h WMWindowCopyRect.h AboutDialog.cxx \
	CKeyboard.cxx Clipboard.cxx CPointer.cxx CurrentUser.cxx \
	DeviceContext.cxx DeviceFrameBuffer.cxx Dialog.cxx \
	DIBSectionBuffer.cxx DynamicFn.cxx EventManager.cxx \
	LaunchProcess.cxx ListViewControl.cxx LowLevelKeyEvents.cxx \
	MonitorInfo.cxx MsgWindow.cxx OSVersion.cxx \
	ProgressControl.cxx RegConfig.cxx Registry.cxx \
	ScaledDIBSectionBuffer.cxx SecurityPage.cxx \
	SDisplayCorePolling.cxx SDisplayCoreWMHooks.cxx SDisplay.cxx \
	Security.cxx Service.cxx SInput.cxx SocketManager.cxx \
	TCharArray.cxx Threading.cxx ToolBar.cxx TsSessions.cxx \
	Win32Util.cxx WMCursor.cxx WMHooks.cxx WMNotifier.cxx \
	WMPoller.cxx WMShatter.cxx WMWindowCopyRect.cxx CleanDesktop.h \
	CleanDesktop.cxx
am__objects_1 =
@BUILD_WINVNC_TRUE@am__objects_2 = librfb_win32_la-CleanDesktop.lo
am_librfb_win32_la_OBJECTS = $(am__objects_1) \
	librfb_win32_la-AboutDialog.lo librfb_win32_la-CKeyboard.lo \
	librfb_win32_la-Clipboard.lo librfb_win32_la-CPointer.lo \
	librfb_win32_la-CurrentUser.lo \
	librfb_win32_la-DeviceContext.lo \
	librfb_win32_la-DeviceFrameBuffer.lo librfb_win32_la-Dialog.lo \
	librfb_win32_la-DIBSectionBuffer.lo \
	librfb_win32_la-DynamicFn.lo librfb_win32_la-EventManager.lo \
	librfb_win32_la-LaunchProcess.lo \
	librfb_win32_la-ListViewControl.lo \
	librfb_win32_la-LowLevelKeyEvents.lo \
	librfb_win32_la-MonitorInfo.lo librfb_win32_la-MsgWindow.lo \
	librfb_win32_la-OSVersion.lo \
	librfb_win32_la-ProgressControl.lo \
	librfb_win32_la-RegConfig.lo librfb_win32_la-Registry.lo \
	librfb_win32_la-ScaledDIBSectionBuffer.lo \
	librfb_win32_la-SecurityPage.lo \
	librfb_win32_la-SDisplayCorePolling.lo \
	librfb_win32_la-SDisplayCoreWMHooks.lo \
	librfb_win32_la-SDisplay.lo librfb_win32_la-Security.lo \
	librfb_win32_la-Service.lo librfb_win32_la-SInput.lo \
	librfb_win32_la-SocketManager.lo librfb_win32_la-TCharArray.lo \
	librfb_win32_la-Threading.lo librfb_win32_la-ToolBar.lo \
	librfb_win32_la-TsSessions.lo librfb_win32_la-Win32Util.lo \
	librfb_win32_la-WMCursor.lo librfb_win32_la-WMHooks.lo \
	librfb_win32_la-WMNotifier.lo librfb_win32_la-WMPoller.lo \
	librfb_win32_la-WMShatter.lo \
	librfb_win32_la-WMWindowCopyRect.lo $(am__objects_2)
librfb_win32_la_OBJECTS = $(am_librfb_win32_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link --tag=CC $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(librfb_win32_la_SOURCES)
DIST_SOURCES = $(am__librfb_win32_la_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD = @BUILD@
BUILD_WINVNC_FALSE = @BUILD_WINVNC_FALSE@
BUILD_WINVNC_TRUE = @BUILD_WINVNC_TRUE@
BUILD_WIN_FALSE = @BUILD_WIN_FALSE@
BUILD_WIN_TRUE = @BUILD_WIN_TRUE@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GMSGFMT = @GMSGFMT@
GNUTLS_CFLAGS = @GNUTLS_CFLAGS@
GNUTLS_LDFLAGS = @GNUTLS_LDFLAGS@
GNUTLS_LIBS = @GNUTLS_LIBS@
HAVE_GNUTLS_FALSE = @HAVE_GNUTLS_FALSE@
HAVE_GNUTLS_TRUE = @HAVE_GNUTLS_TRUE@
HAVE_PAM_FALSE = @HAVE_PAM_FALSE@
HAVE_PAM_TRUE = @HAVE_PAM_TRUE@
INCLUDED_JPEG_FALSE = @INCLUDED_JPEG_FALSE@
INCLUDED_JPEG_TRUE = @INCLUDED_JPEG_TRUE@
INCLUDED_ZLIB_FALSE = @INCLUDED_ZLIB_FALSE@
INCLUDED_ZLIB_TRUE = @INCLUDED_ZLIB_TRUE@
INET_LIB = @INET_LIB@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MITSHM_DEFINE = @MITSHM_DEFINE@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
MSGMERGE = @MSGMERGE@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PAM_LIBS = @PAM_LIBS@
PATH_SEPARATOR = @PATH_SEPARATOR@
POSUB = @POSUB@
RANLIB = @RANLIB@
RCVERSION = @RCVERSION@
READDISPLAY_DEFINE = @READDISPLAY_DEFINE@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
VNCCONFIG_DIR = @VNCCONFIG_DIR@
WINDRES = @WINDRES@
X86_64_FALSE = @X86_64_FALSE@
X86_64_TRUE = @X86_64_TRUE@
XGETTEXT = @XGETTEXT@
XTEST_DEFINE = @XTEST_DEFINE@
XTEST_LIB = @XTEST_LIB@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
ac_ct_WINDRES = @ac_ct_WINDRES@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
noinst_LTLIBRARIES = librfb_win32.la
HDRS = \
  AboutDialog.h \
  BitmapInfo.h \
  CKeyboard.h \
  Clipboard.h \
  CompatibleBitmap.h \
  ComputerName.h \
  CPointer.h \
  CurrentUser.h \
  DeviceContext.h \
  DeviceFrameBuffer.h \
  Dialog.h \
  DIBSectionBuffer.h \
  DynamicFn.h \
  EventManager.h \
  Handle.h \
  IconInfo.h \
  IntervalTimer.h \
  keymap.h \
  LaunchProcess.h \
  ListViewControl.h \
  LocalMem.h \
  LogicalPalette.h \
  LowLevelKeyEvents.h \
  ModuleFileName.h \
  MonitorInfo.h \
  MsgBox.h \
  MsgWindow.h \
  OSVersion.h \
  ProgressControl.h \
  RegConfig.h \
  Registry.h \
  resource.h \
  ScaledDIBSectionBuffer.h \
  SecurityPage.h \
  SDisplayCoreDriver.h \
  SDisplayCorePolling.h \
  SDisplayCoreWMHooks.h \
  SDisplay.h \
  Security.h \
  Service.h \
  SInput.h \
  SocketManager.h \
  TCharArray.h \
  Threading.h \
  ToolBar.h \
  TrayIcon.h \
  TsSessions.h \
  Win32Util.h \
  WMCursor.h \
  WMHooks.h \
  WMNotifier.h \
  WMPoller.h \
  WMShatter.h \
  WMWindowCopyRect.h

librfb_win32_la_SOURCES = $(HDRS) AboutDialog.cxx CKeyboard.cxx \
	Clipboard.cxx CPointer.cxx CurrentUser.cxx DeviceContext.cxx \
	DeviceFrameBuffer.cxx Dialog.cxx DIBSectionBuffer.cxx \
	DynamicFn.cxx EventManager.cxx LaunchProcess.cxx \
	ListViewControl.cxx LowLevelKeyEvents.cxx MonitorInfo.cxx \
	MsgWindow.cxx OSVersion.cxx ProgressControl.cxx RegConfig.cxx \
	Registry.cxx ScaledDIBSectionBuffer.cxx SecurityPage.cxx \
	SDisplayCorePolling.cxx SDisplayCoreWMHooks.cxx SDisplay.cxx \
	Security.cxx Service.cxx SInput.cxx SocketManager.cxx \
	TCharArray.cxx Threading.cxx ToolBar.cxx TsSessions.cxx \
	Win32Util.cxx WMCursor.cxx WMHooks.cxx WMNotifier.cxx \
	WMPoller.cxx WMShatter.cxx WMWindowCopyRect.cxx \
	$(am__append_1)
librfb_win32_la_CPPFLAGS = -I$(top_srcdir)/common -I$(top_srcdir)/win
librfb_win32_la_LIBADD = 
EXTRA_DIST = CMakeLists.txt
all: all-am

.SUFFIXES:
.SUFFIXES: .cxx .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  win/rfb_win32/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  win/rfb_win32/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
librfb_win32.la: $(librfb_win32_la_OBJECTS) $(librfb_win32_la_DEPENDENCIES) 
	$(CXXLINK)  $(librfb_win32_la_LDFLAGS) $(librfb_win32_la_OBJECTS) $(librfb_win32_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-AboutDialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-CKeyboard.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-CPointer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-CleanDesktop.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-Clipboard.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-CurrentUser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-DIBSectionBuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-DeviceContext.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-DeviceFrameBuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-Dialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-DynamicFn.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-EventManager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-LaunchProcess.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-ListViewControl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-LowLevelKeyEvents.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-MonitorInfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-MsgWindow.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-OSVersion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-ProgressControl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-RegConfig.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-Registry.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-SDisplay.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-SDisplayCorePolling.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-SDisplayCoreWMHooks.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-SInput.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-ScaledDIBSectionBuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-Security.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-SecurityPage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-Service.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-SocketManager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-TCharArray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-Threading.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-ToolBar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-TsSessions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-WMCursor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-WMHooks.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-WMNotifier.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-WMPoller.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-WMShatter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-WMWindowCopyRect.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librfb_win32_la-Win32Util.Plo@am__quote@

.cxx.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

librfb_win32_la-AboutDialog.lo: AboutDialog.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-AboutDialog.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-AboutDialog.Tpo" -c -o librfb_win32_la-AboutDialog.lo `test -f 'AboutDialog.cxx' || echo '$(srcdir)/'`AboutDialog.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-AboutDialog.Tpo" "$(DEPDIR)/librfb_win32_la-AboutDialog.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-AboutDialog.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AboutDialog.cxx' object='librfb_win32_la-AboutDialog.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-AboutDialog.lo `test -f 'AboutDialog.cxx' || echo '$(srcdir)/'`AboutDialog.cxx

librfb_win32_la-CKeyboard.lo: CKeyboard.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-CKeyboard.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-CKeyboard.Tpo" -c -o librfb_win32_la-CKeyboard.lo `test -f 'CKeyboard.cxx' || echo '$(srcdir)/'`CKeyboard.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-CKeyboard.Tpo" "$(DEPDIR)/librfb_win32_la-CKeyboard.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-CKeyboard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CKeyboard.cxx' object='librfb_win32_la-CKeyboard.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-CKeyboard.lo `test -f 'CKeyboard.cxx' || echo '$(srcdir)/'`CKeyboard.cxx

librfb_win32_la-Clipboard.lo: Clipboard.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-Clipboard.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-Clipboard.Tpo" -c -o librfb_win32_la-Clipboard.lo `test -f 'Clipboard.cxx' || echo '$(srcdir)/'`Clipboard.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-Clipboard.Tpo" "$(DEPDIR)/librfb_win32_la-Clipboard.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-Clipboard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Clipboard.cxx' object='librfb_win32_la-Clipboard.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-Clipboard.lo `test -f 'Clipboard.cxx' || echo '$(srcdir)/'`Clipboard.cxx

librfb_win32_la-CPointer.lo: CPointer.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-CPointer.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-CPointer.Tpo" -c -o librfb_win32_la-CPointer.lo `test -f 'CPointer.cxx' || echo '$(srcdir)/'`CPointer.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-CPointer.Tpo" "$(DEPDIR)/librfb_win32_la-CPointer.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-CPointer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CPointer.cxx' object='librfb_win32_la-CPointer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-CPointer.lo `test -f 'CPointer.cxx' || echo '$(srcdir)/'`CPointer.cxx

librfb_win32_la-CurrentUser.lo: CurrentUser.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-CurrentUser.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-CurrentUser.Tpo" -c -o librfb_win32_la-CurrentUser.lo `test -f 'CurrentUser.cxx' || echo '$(srcdir)/'`CurrentUser.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-CurrentUser.Tpo" "$(DEPDIR)/librfb_win32_la-CurrentUser.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-CurrentUser.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CurrentUser.cxx' object='librfb_win32_la-CurrentUser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-CurrentUser.lo `test -f 'CurrentUser.cxx' || echo '$(srcdir)/'`CurrentUser.cxx

librfb_win32_la-DeviceContext.lo: DeviceContext.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-DeviceContext.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-DeviceContext.Tpo" -c -o librfb_win32_la-DeviceContext.lo `test -f 'DeviceContext.cxx' || echo '$(srcdir)/'`DeviceContext.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-DeviceContext.Tpo" "$(DEPDIR)/librfb_win32_la-DeviceContext.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-DeviceContext.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DeviceContext.cxx' object='librfb_win32_la-DeviceContext.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-DeviceContext.lo `test -f 'DeviceContext.cxx' || echo '$(srcdir)/'`DeviceContext.cxx

librfb_win32_la-DeviceFrameBuffer.lo: DeviceFrameBuffer.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-DeviceFrameBuffer.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-DeviceFrameBuffer.Tpo" -c -o librfb_win32_la-DeviceFrameBuffer.lo `test -f 'DeviceFrameBuffer.cxx' || echo '$(srcdir)/'`DeviceFrameBuffer.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-DeviceFrameBuffer.Tpo" "$(DEPDIR)/librfb_win32_la-DeviceFrameBuffer.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-DeviceFrameBuffer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DeviceFrameBuffer.cxx' object='librfb_win32_la-DeviceFrameBuffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-DeviceFrameBuffer.lo `test -f 'DeviceFrameBuffer.cxx' || echo '$(srcdir)/'`DeviceFrameBuffer.cxx

librfb_win32_la-Dialog.lo: Dialog.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-Dialog.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-Dialog.Tpo" -c -o librfb_win32_la-Dialog.lo `test -f 'Dialog.cxx' || echo '$(srcdir)/'`Dialog.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-Dialog.Tpo" "$(DEPDIR)/librfb_win32_la-Dialog.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-Dialog.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Dialog.cxx' object='librfb_win32_la-Dialog.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-Dialog.lo `test -f 'Dialog.cxx' || echo '$(srcdir)/'`Dialog.cxx

librfb_win32_la-DIBSectionBuffer.lo: DIBSectionBuffer.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-DIBSectionBuffer.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-DIBSectionBuffer.Tpo" -c -o librfb_win32_la-DIBSectionBuffer.lo `test -f 'DIBSectionBuffer.cxx' || echo '$(srcdir)/'`DIBSectionBuffer.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-DIBSectionBuffer.Tpo" "$(DEPDIR)/librfb_win32_la-DIBSectionBuffer.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-DIBSectionBuffer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DIBSectionBuffer.cxx' object='librfb_win32_la-DIBSectionBuffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-DIBSectionBuffer.lo `test -f 'DIBSectionBuffer.cxx' || echo '$(srcdir)/'`DIBSectionBuffer.cxx

librfb_win32_la-DynamicFn.lo: DynamicFn.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-DynamicFn.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-DynamicFn.Tpo" -c -o librfb_win32_la-DynamicFn.lo `test -f 'DynamicFn.cxx' || echo '$(srcdir)/'`DynamicFn.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-DynamicFn.Tpo" "$(DEPDIR)/librfb_win32_la-DynamicFn.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-DynamicFn.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DynamicFn.cxx' object='librfb_win32_la-DynamicFn.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-DynamicFn.lo `test -f 'DynamicFn.cxx' || echo '$(srcdir)/'`DynamicFn.cxx

librfb_win32_la-EventManager.lo: EventManager.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-EventManager.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-EventManager.Tpo" -c -o librfb_win32_la-EventManager.lo `test -f 'EventManager.cxx' || echo '$(srcdir)/'`EventManager.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-EventManager.Tpo" "$(DEPDIR)/librfb_win32_la-EventManager.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-EventManager.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EventManager.cxx' object='librfb_win32_la-EventManager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-EventManager.lo `test -f 'EventManager.cxx' || echo '$(srcdir)/'`EventManager.cxx

librfb_win32_la-LaunchProcess.lo: LaunchProcess.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-LaunchProcess.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-LaunchProcess.Tpo" -c -o librfb_win32_la-LaunchProcess.lo `test -f 'LaunchProcess.cxx' || echo '$(srcdir)/'`LaunchProcess.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-LaunchProcess.Tpo" "$(DEPDIR)/librfb_win32_la-LaunchProcess.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-LaunchProcess.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LaunchProcess.cxx' object='librfb_win32_la-LaunchProcess.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-LaunchProcess.lo `test -f 'LaunchProcess.cxx' || echo '$(srcdir)/'`LaunchProcess.cxx

librfb_win32_la-ListViewControl.lo: ListViewControl.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-ListViewControl.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-ListViewControl.Tpo" -c -o librfb_win32_la-ListViewControl.lo `test -f 'ListViewControl.cxx' || echo '$(srcdir)/'`ListViewControl.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-ListViewControl.Tpo" "$(DEPDIR)/librfb_win32_la-ListViewControl.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-ListViewControl.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ListViewControl.cxx' object='librfb_win32_la-ListViewControl.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-ListViewControl.lo `test -f 'ListViewControl.cxx' || echo '$(srcdir)/'`ListViewControl.cxx

librfb_win32_la-LowLevelKeyEvents.lo: LowLevelKeyEvents.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-LowLevelKeyEvents.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-LowLevelKeyEvents.Tpo" -c -o librfb_win32_la-LowLevelKeyEvents.lo `test -f 'LowLevelKeyEvents.cxx' || echo '$(srcdir)/'`LowLevelKeyEvents.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-LowLevelKeyEvents.Tpo" "$(DEPDIR)/librfb_win32_la-LowLevelKeyEvents.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-LowLevelKeyEvents.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LowLevelKeyEvents.cxx' object='librfb_win32_la-LowLevelKeyEvents.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-LowLevelKeyEvents.lo `test -f 'LowLevelKeyEvents.cxx' || echo '$(srcdir)/'`LowLevelKeyEvents.cxx

librfb_win32_la-MonitorInfo.lo: MonitorInfo.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-MonitorInfo.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-MonitorInfo.Tpo" -c -o librfb_win32_la-MonitorInfo.lo `test -f 'MonitorInfo.cxx' || echo '$(srcdir)/'`MonitorInfo.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-MonitorInfo.Tpo" "$(DEPDIR)/librfb_win32_la-MonitorInfo.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-MonitorInfo.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MonitorInfo.cxx' object='librfb_win32_la-MonitorInfo.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-MonitorInfo.lo `test -f 'MonitorInfo.cxx' || echo '$(srcdir)/'`MonitorInfo.cxx

librfb_win32_la-MsgWindow.lo: MsgWindow.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-MsgWindow.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-MsgWindow.Tpo" -c -o librfb_win32_la-MsgWindow.lo `test -f 'MsgWindow.cxx' || echo '$(srcdir)/'`MsgWindow.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-MsgWindow.Tpo" "$(DEPDIR)/librfb_win32_la-MsgWindow.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-MsgWindow.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MsgWindow.cxx' object='librfb_win32_la-MsgWindow.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-MsgWindow.lo `test -f 'MsgWindow.cxx' || echo '$(srcdir)/'`MsgWindow.cxx

librfb_win32_la-OSVersion.lo: OSVersion.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-OSVersion.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-OSVersion.Tpo" -c -o librfb_win32_la-OSVersion.lo `test -f 'OSVersion.cxx' || echo '$(srcdir)/'`OSVersion.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-OSVersion.Tpo" "$(DEPDIR)/librfb_win32_la-OSVersion.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-OSVersion.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='OSVersion.cxx' object='librfb_win32_la-OSVersion.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-OSVersion.lo `test -f 'OSVersion.cxx' || echo '$(srcdir)/'`OSVersion.cxx

librfb_win32_la-ProgressControl.lo: ProgressControl.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-ProgressControl.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-ProgressControl.Tpo" -c -o librfb_win32_la-ProgressControl.lo `test -f 'ProgressControl.cxx' || echo '$(srcdir)/'`ProgressControl.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-ProgressControl.Tpo" "$(DEPDIR)/librfb_win32_la-ProgressControl.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-ProgressControl.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ProgressControl.cxx' object='librfb_win32_la-ProgressControl.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-ProgressControl.lo `test -f 'ProgressControl.cxx' || echo '$(srcdir)/'`ProgressControl.cxx

librfb_win32_la-RegConfig.lo: RegConfig.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-RegConfig.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-RegConfig.Tpo" -c -o librfb_win32_la-RegConfig.lo `test -f 'RegConfig.cxx' || echo '$(srcdir)/'`RegConfig.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-RegConfig.Tpo" "$(DEPDIR)/librfb_win32_la-RegConfig.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-RegConfig.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RegConfig.cxx' object='librfb_win32_la-RegConfig.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-RegConfig.lo `test -f 'RegConfig.cxx' || echo '$(srcdir)/'`RegConfig.cxx

librfb_win32_la-Registry.lo: Registry.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-Registry.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-Registry.Tpo" -c -o librfb_win32_la-Registry.lo `test -f 'Registry.cxx' || echo '$(srcdir)/'`Registry.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-Registry.Tpo" "$(DEPDIR)/librfb_win32_la-Registry.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-Registry.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Registry.cxx' object='librfb_win32_la-Registry.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-Registry.lo `test -f 'Registry.cxx' || echo '$(srcdir)/'`Registry.cxx

librfb_win32_la-ScaledDIBSectionBuffer.lo: ScaledDIBSectionBuffer.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-ScaledDIBSectionBuffer.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-ScaledDIBSectionBuffer.Tpo" -c -o librfb_win32_la-ScaledDIBSectionBuffer.lo `test -f 'ScaledDIBSectionBuffer.cxx' || echo '$(srcdir)/'`ScaledDIBSectionBuffer.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-ScaledDIBSectionBuffer.Tpo" "$(DEPDIR)/librfb_win32_la-ScaledDIBSectionBuffer.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-ScaledDIBSectionBuffer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaledDIBSectionBuffer.cxx' object='librfb_win32_la-ScaledDIBSectionBuffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-ScaledDIBSectionBuffer.lo `test -f 'ScaledDIBSectionBuffer.cxx' || echo '$(srcdir)/'`ScaledDIBSectionBuffer.cxx

librfb_win32_la-SecurityPage.lo: SecurityPage.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-SecurityPage.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-SecurityPage.Tpo" -c -o librfb_win32_la-SecurityPage.lo `test -f 'SecurityPage.cxx' || echo '$(srcdir)/'`SecurityPage.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-SecurityPage.Tpo" "$(DEPDIR)/librfb_win32_la-SecurityPage.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-SecurityPage.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SecurityPage.cxx' object='librfb_win32_la-SecurityPage.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-SecurityPage.lo `test -f 'SecurityPage.cxx' || echo '$(srcdir)/'`SecurityPage.cxx

librfb_win32_la-SDisplayCorePolling.lo: SDisplayCorePolling.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-SDisplayCorePolling.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-SDisplayCorePolling.Tpo" -c -o librfb_win32_la-SDisplayCorePolling.lo `test -f 'SDisplayCorePolling.cxx' || echo '$(srcdir)/'`SDisplayCorePolling.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-SDisplayCorePolling.Tpo" "$(DEPDIR)/librfb_win32_la-SDisplayCorePolling.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-SDisplayCorePolling.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SDisplayCorePolling.cxx' object='librfb_win32_la-SDisplayCorePolling.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-SDisplayCorePolling.lo `test -f 'SDisplayCorePolling.cxx' || echo '$(srcdir)/'`SDisplayCorePolling.cxx

librfb_win32_la-SDisplayCoreWMHooks.lo: SDisplayCoreWMHooks.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-SDisplayCoreWMHooks.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-SDisplayCoreWMHooks.Tpo" -c -o librfb_win32_la-SDisplayCoreWMHooks.lo `test -f 'SDisplayCoreWMHooks.cxx' || echo '$(srcdir)/'`SDisplayCoreWMHooks.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-SDisplayCoreWMHooks.Tpo" "$(DEPDIR)/librfb_win32_la-SDisplayCoreWMHooks.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-SDisplayCoreWMHooks.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SDisplayCoreWMHooks.cxx' object='librfb_win32_la-SDisplayCoreWMHooks.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-SDisplayCoreWMHooks.lo `test -f 'SDisplayCoreWMHooks.cxx' || echo '$(srcdir)/'`SDisplayCoreWMHooks.cxx

librfb_win32_la-SDisplay.lo: SDisplay.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-SDisplay.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-SDisplay.Tpo" -c -o librfb_win32_la-SDisplay.lo `test -f 'SDisplay.cxx' || echo '$(srcdir)/'`SDisplay.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-SDisplay.Tpo" "$(DEPDIR)/librfb_win32_la-SDisplay.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-SDisplay.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SDisplay.cxx' object='librfb_win32_la-SDisplay.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-SDisplay.lo `test -f 'SDisplay.cxx' || echo '$(srcdir)/'`SDisplay.cxx

librfb_win32_la-Security.lo: Security.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-Security.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-Security.Tpo" -c -o librfb_win32_la-Security.lo `test -f 'Security.cxx' || echo '$(srcdir)/'`Security.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-Security.Tpo" "$(DEPDIR)/librfb_win32_la-Security.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-Security.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Security.cxx' object='librfb_win32_la-Security.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-Security.lo `test -f 'Security.cxx' || echo '$(srcdir)/'`Security.cxx

librfb_win32_la-Service.lo: Service.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-Service.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-Service.Tpo" -c -o librfb_win32_la-Service.lo `test -f 'Service.cxx' || echo '$(srcdir)/'`Service.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-Service.Tpo" "$(DEPDIR)/librfb_win32_la-Service.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-Service.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Service.cxx' object='librfb_win32_la-Service.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-Service.lo `test -f 'Service.cxx' || echo '$(srcdir)/'`Service.cxx

librfb_win32_la-SInput.lo: SInput.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-SInput.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-SInput.Tpo" -c -o librfb_win32_la-SInput.lo `test -f 'SInput.cxx' || echo '$(srcdir)/'`SInput.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-SInput.Tpo" "$(DEPDIR)/librfb_win32_la-SInput.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-SInput.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SInput.cxx' object='librfb_win32_la-SInput.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-SInput.lo `test -f 'SInput.cxx' || echo '$(srcdir)/'`SInput.cxx

librfb_win32_la-SocketManager.lo: SocketManager.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-SocketManager.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-SocketManager.Tpo" -c -o librfb_win32_la-SocketManager.lo `test -f 'SocketManager.cxx' || echo '$(srcdir)/'`SocketManager.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-SocketManager.Tpo" "$(DEPDIR)/librfb_win32_la-SocketManager.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-SocketManager.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SocketManager.cxx' object='librfb_win32_la-SocketManager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-SocketManager.lo `test -f 'SocketManager.cxx' || echo '$(srcdir)/'`SocketManager.cxx

librfb_win32_la-TCharArray.lo: TCharArray.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-TCharArray.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-TCharArray.Tpo" -c -o librfb_win32_la-TCharArray.lo `test -f 'TCharArray.cxx' || echo '$(srcdir)/'`TCharArray.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-TCharArray.Tpo" "$(DEPDIR)/librfb_win32_la-TCharArray.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-TCharArray.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TCharArray.cxx' object='librfb_win32_la-TCharArray.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-TCharArray.lo `test -f 'TCharArray.cxx' || echo '$(srcdir)/'`TCharArray.cxx

librfb_win32_la-Threading.lo: Threading.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-Threading.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-Threading.Tpo" -c -o librfb_win32_la-Threading.lo `test -f 'Threading.cxx' || echo '$(srcdir)/'`Threading.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-Threading.Tpo" "$(DEPDIR)/librfb_win32_la-Threading.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-Threading.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Threading.cxx' object='librfb_win32_la-Threading.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-Threading.lo `test -f 'Threading.cxx' || echo '$(srcdir)/'`Threading.cxx

librfb_win32_la-ToolBar.lo: ToolBar.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-ToolBar.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-ToolBar.Tpo" -c -o librfb_win32_la-ToolBar.lo `test -f 'ToolBar.cxx' || echo '$(srcdir)/'`ToolBar.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-ToolBar.Tpo" "$(DEPDIR)/librfb_win32_la-ToolBar.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-ToolBar.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ToolBar.cxx' object='librfb_win32_la-ToolBar.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-ToolBar.lo `test -f 'ToolBar.cxx' || echo '$(srcdir)/'`ToolBar.cxx

librfb_win32_la-TsSessions.lo: TsSessions.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-TsSessions.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-TsSessions.Tpo" -c -o librfb_win32_la-TsSessions.lo `test -f 'TsSessions.cxx' || echo '$(srcdir)/'`TsSessions.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-TsSessions.Tpo" "$(DEPDIR)/librfb_win32_la-TsSessions.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-TsSessions.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TsSessions.cxx' object='librfb_win32_la-TsSessions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-TsSessions.lo `test -f 'TsSessions.cxx' || echo '$(srcdir)/'`TsSessions.cxx

librfb_win32_la-Win32Util.lo: Win32Util.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-Win32Util.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-Win32Util.Tpo" -c -o librfb_win32_la-Win32Util.lo `test -f 'Win32Util.cxx' || echo '$(srcdir)/'`Win32Util.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-Win32Util.Tpo" "$(DEPDIR)/librfb_win32_la-Win32Util.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-Win32Util.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Win32Util.cxx' object='librfb_win32_la-Win32Util.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-Win32Util.lo `test -f 'Win32Util.cxx' || echo '$(srcdir)/'`Win32Util.cxx

librfb_win32_la-WMCursor.lo: WMCursor.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-WMCursor.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-WMCursor.Tpo" -c -o librfb_win32_la-WMCursor.lo `test -f 'WMCursor.cxx' || echo '$(srcdir)/'`WMCursor.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-WMCursor.Tpo" "$(DEPDIR)/librfb_win32_la-WMCursor.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-WMCursor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WMCursor.cxx' object='librfb_win32_la-WMCursor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-WMCursor.lo `test -f 'WMCursor.cxx' || echo '$(srcdir)/'`WMCursor.cxx

librfb_win32_la-WMHooks.lo: WMHooks.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-WMHooks.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-WMHooks.Tpo" -c -o librfb_win32_la-WMHooks.lo `test -f 'WMHooks.cxx' || echo '$(srcdir)/'`WMHooks.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-WMHooks.Tpo" "$(DEPDIR)/librfb_win32_la-WMHooks.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-WMHooks.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WMHooks.cxx' object='librfb_win32_la-WMHooks.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-WMHooks.lo `test -f 'WMHooks.cxx' || echo '$(srcdir)/'`WMHooks.cxx

librfb_win32_la-WMNotifier.lo: WMNotifier.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-WMNotifier.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-WMNotifier.Tpo" -c -o librfb_win32_la-WMNotifier.lo `test -f 'WMNotifier.cxx' || echo '$(srcdir)/'`WMNotifier.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-WMNotifier.Tpo" "$(DEPDIR)/librfb_win32_la-WMNotifier.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-WMNotifier.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WMNotifier.cxx' object='librfb_win32_la-WMNotifier.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-WMNotifier.lo `test -f 'WMNotifier.cxx' || echo '$(srcdir)/'`WMNotifier.cxx

librfb_win32_la-WMPoller.lo: WMPoller.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-WMPoller.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-WMPoller.Tpo" -c -o librfb_win32_la-WMPoller.lo `test -f 'WMPoller.cxx' || echo '$(srcdir)/'`WMPoller.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-WMPoller.Tpo" "$(DEPDIR)/librfb_win32_la-WMPoller.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-WMPoller.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WMPoller.cxx' object='librfb_win32_la-WMPoller.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-WMPoller.lo `test -f 'WMPoller.cxx' || echo '$(srcdir)/'`WMPoller.cxx

librfb_win32_la-WMShatter.lo: WMShatter.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-WMShatter.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-WMShatter.Tpo" -c -o librfb_win32_la-WMShatter.lo `test -f 'WMShatter.cxx' || echo '$(srcdir)/'`WMShatter.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-WMShatter.Tpo" "$(DEPDIR)/librfb_win32_la-WMShatter.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-WMShatter.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WMShatter.cxx' object='librfb_win32_la-WMShatter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-WMShatter.lo `test -f 'WMShatter.cxx' || echo '$(srcdir)/'`WMShatter.cxx

librfb_win32_la-WMWindowCopyRect.lo: WMWindowCopyRect.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-WMWindowCopyRect.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-WMWindowCopyRect.Tpo" -c -o librfb_win32_la-WMWindowCopyRect.lo `test -f 'WMWindowCopyRect.cxx' || echo '$(srcdir)/'`WMWindowCopyRect.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-WMWindowCopyRect.Tpo" "$(DEPDIR)/librfb_win32_la-WMWindowCopyRect.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-WMWindowCopyRect.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WMWindowCopyRect.cxx' object='librfb_win32_la-WMWindowCopyRect.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-WMWindowCopyRect.lo `test -f 'WMWindowCopyRect.cxx' || echo '$(srcdir)/'`WMWindowCopyRect.cxx

librfb_win32_la-CleanDesktop.lo: CleanDesktop.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT librfb_win32_la-CleanDesktop.lo -MD -MP -MF "$(DEPDIR)/librfb_win32_la-CleanDesktop.Tpo" -c -o librfb_win32_la-CleanDesktop.lo `test -f 'CleanDesktop.cxx' || echo '$(srcdir)/'`CleanDesktop.cxx; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/librfb_win32_la-CleanDesktop.Tpo" "$(DEPDIR)/librfb_win32_la-CleanDesktop.Plo"; else rm -f "$(DEPDIR)/librfb_win32_la-CleanDesktop.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CleanDesktop.cxx' object='librfb_win32_la-CleanDesktop.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librfb_win32_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o librfb_win32_la-CleanDesktop.lo `test -f 'CleanDesktop.cxx' || echo '$(srcdir)/'`CleanDesktop.cxx

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
