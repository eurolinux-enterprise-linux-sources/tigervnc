diff --git a/common/rfb/PixelBuffer.cxx b/common/rfb/PixelBuffer.cxx
index a48e735..579ad17 100644
--- a/common/rfb/PixelBuffer.cxx
+++ b/common/rfb/PixelBuffer.cxx
@@ -100,12 +100,23 @@ rdr::U8* FullFramePixelBuffer::getPixelsRW(const Rect& r, int* stride)
 
 void FullFramePixelBuffer::fillRect(const Rect& r, Pixel pix) {
   int stride;
-  U8* data = getPixelsRW(r, &stride);
+  Rect drect = r;
+
+  if (!drect.enclosed_by(getRect())) {
+    vlog.error("Destination rect %dx%d at %d,%d exceeds framebuffer %dx%d",
+                drect.width(), drect.height(), drect.tl.x, drect.tl.y, width_, height_);
+    drect = drect.intersect(getRect());
+  }
+
+  if (drect.is_empty())
+    return;
+
+  U8* data = getPixelsRW(drect, &stride);
   int bytesPerPixel = getPF().bpp/8;
   int bytesPerRow = bytesPerPixel * stride;
   int bytesPerFill = bytesPerPixel * r.width();
 
-  U8* end = data + (bytesPerRow * r.height());
+  U8* end = data + (bytesPerRow * drect.height());
   while (data < end) {
     switch (bytesPerPixel) {
     case 1:
@@ -114,7 +125,7 @@ void FullFramePixelBuffer::fillRect(const Rect& r, Pixel pix) {
     case 2:
       {
         U16* optr = (U16*)data;
-        U16* eol = optr + r.width();
+        U16* eol = optr + drect.width();
         while (optr < eol)
           *optr++ = pix;
       }
@@ -122,7 +133,7 @@ void FullFramePixelBuffer::fillRect(const Rect& r, Pixel pix) {
     case 4:
       {
         U32* optr = (U32*)data;
-        U32* eol = optr + r.width();
+        U32* eol = optr + drect.width();
         while (optr < eol)
           *optr++ = pix;
       }
